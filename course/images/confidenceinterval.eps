%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 582.000000 371.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.8.5 (Build 12F45) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 582 371
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 582 371
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Arial-ItalicMT
%!FontType1-1.0: Arial-ItalicMT 1.0000.5.0600
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Arial-ItalicMT def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /alpha put
dup 34 /slash put
dup 35 /two put
dup 36 /one put
dup 37 /hyphen put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1059 1 index div -665 2 index div 2783 3 index div 2043 5 -1 roll div]cvx def
/sfnts [<

0000000000000000025C00A100D301BE00DE01A6031402AB015002A70196010E0318006B039B01D1054B0089023C02B0014D021603F301760176001503A901F400F400B6020402D8012B04A701A000BC01BD028C026B0278040F015704A904FD017404D2040302E400A602EE00000000061404A7000002760000016D013E00000267006D009E021400CB02A40085007100C2009E0609029000B9008F00260248003501490091009902EF00EB008E0011013F006A007900FD01A3057402A1017A03E8020C005601FD02DF013B057400660610008101B3024E03CB01E400CD02BC0132014B01680239016200FD00E601A201E60255004D028300A3046705D401DD012B014E05680070000004E003490366021302BB0000000000000000000000000000000000AF00B4000300CD004C03C8005C0192007200CD022B0049026F009D03BD01E900B4017C046703680099027802040183028102AC00B30348040B004200B403B400BE01A803D6012B00AF0478016E0193FF45FD5D00F506A604AE03B10536041CFFCAFEDC01A501D0FFBA02F10037FFCA0355FE67019C04190055007C00E50072006D000B00AB012B009C00DB01A60008012B00250056008E00A500150010010900CB00460017004C005E01F200B80083001101360128004E0222006B0241072006140000072700AAFF370037006E002901DA04A8007500BA404154403F3E3D3C3B3A3938373534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B0042651582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B10B0A432343650A2D2C00B10A0B4323430B2D2C00B0172370B101173E01B0172370B10217453AB10200080D2D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2CB00143632362B0002342B00F2B2D2C2045B0004360442D2C01B00643B00743650A2D2C2069B04061B0008B20B12CC08A8CB8100062602B0C642364615C58B00361592D2C45B0112BB0172344B0177AE4182D2C45B0112BB01723442D2CB01243588745B0112BB0172344B0177AE41B038A45186920B01723448A8A8720B0A05158B0112BB0172344B0177AE41B21B0177AE45959182D2C2D2CB0022546608A46B040618C482D2C01182F2D2C


C59B6256FBDDFD670ADF07FB00020009000100000000000000010000073EFE4E00430AAAFBDDFA520ADF0021000700000000000000000000000000070600010002AA005F0239FF980473012F047300780490006602AAFF880000003A0058007D00DC016201DB020A00010000000700F2003C005A000500020010002F005500000281024D00040004B15430BB02AA0001004002A8B2393340B802A8B310153240B802A8B2073340B802A9B30C12327F411102A600AF02A600BF02A600EF02A60004003002A6004F02A6005F02A60003004002A6B28F3340B802A6B25F3340B802A6B34E513280B802A6B34C4D3240B802A6B340483240B802A6B30A0D3240B802A6B3093A3240B802A6B330333280B802A4B345783240B802A4B3323A3280B802A4B32A313240B802A4B32425327F411002A4000100EF02A40001000F02A4002F02A4003F02A4007F02A40004004002A4B3151D3280B802A4B309143240B802A3B31A1B320FBF02A3007F02A300EF02A30003004002A3400A091432124F064F0702EF413701EB0001009F01EB0001007F01EB0001005F01EB0001003F01EB0001002F01EB0001000F01EB0001007F01EA000100EF01EA000100BF01EA000100AF01EA0001002F01EA0001003F01EA0001004F01EA0001006F01EA0001007F01EA000101ED01ED01EC01EC01EB01EB01EA01EA4012002C01001F01102C01101F01402C01401F01B90109010BB2341F91B8010B4037341F2E20431F3220431F3320471F2C20431F1F20431F7B2A481F2D2A481F212A441F370100010100090102000800171700000012110840B801ACB7FE870DFD870D0009B8013FB22A4C1F4109013A00BA0401001F0136001F019A001F0104B22A721FBE01010020019A001F0100002002ABB21FFB2DB80156B21FFA1FB80801B21FF91FB8020140131FF81FE41FF71FBB1FF51F4A1FC92AAB1FB92DB8019AB21FB81FB80401B21FA02AB802AB400F1F8B1F521F7B2AE41F781F6C1F6E20B80401B21F6C21B80401400B1F632AAB1F5A2A5A1F5820B802ABB21F4E20B80156B21F471FB8019AB61F452AAB1F442AB80101B61F401F891F332DB80401B21F3221B80401B61F311F721F2E1FB8019AB21F2C1FB80401B21F291FB80801B21F281FB80801B61F271F6C1F2221B8040140451F550D090D093790DC0790A80790A607907E07904107903B07903607903507903007902F07902B07902507901D071408120810080E080C080A080808060804080208000814B8FFE0402B00000100140610000001000604000001000410000001001002000001000200000001000002010802004A00B013034B024B5342014BB0C063004B6220B0F65323B8010A515AB005234201B0124B004B544218B0382B4BB807FF52B0372B4BB007505B58B101018E59B0382BB00288B801005458

00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/hyphen 1 def
/slash 2 def
/one 3 def
/two 4 def
/alpha 5 def
/uniA788 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1059 -665 2783 2043}def
/UniqueID 4024094 def
currentdict currentfile eexec

9BA149C455F06D9B98FB93876A83041EFD5CA37140CE1772762AF04718F0362F03275BB7003D23D267923124D0DF9BB566781BA877280F055151C574DA69C468BAD52112E6ED72F58F98A086C35B9EE8AC65729FD0CE63B8CE4E05A36D6372921DC02E2C0DBC3931DB74340A02A9CED24F1BADF00AF360E6C36A52D239BB5E355C91B3BF5C2B34C7B43904AC742742DF40623CC0951D665C30B049823D13ADECA280841C6DD469A8C84A298280C81EF9F39DFCACD95EA38C667F73CF44AFFE4369A56B76B301848A4799A8C0FE2A4C29B4635FF15F01CDA998D1B89DA496CEBAF83D802956F04114F39D76E851EF5D9964ECCBCA92E62F6B7BDC3F0EF37DEA04A257DDFC5735F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Arial-ItalicMT cguidfix
/F1.1/Arial-ItalicMT renmfont
%RBIBeginFontSubset: HelveticaNeue-Italic
%!FontType1-1.0: HelveticaNeue-Italic 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /hyphen put
dup 34 /z put
dup 35 /uni03B1 put
dup 36 /slash put
dup 37 /two put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -993 1 index div -481 2 index div 1511 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


B8000A2B00BA00020001000C2B01BA00030003000C2B01BF000400410035002A001E0012000000122BBF0005003A00300025001B0010000000122B00BF000200450039002C00200013000000122BBF0003004E0040003200240016000000122B00BA0006000400112BB8000120457D691844B800002B0000
00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/hyphen 1 def
/slash 2 def
/two 3 def
/z 4 def
/uni03B1 5 def
/u10FB 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-993 -481 1511 1077}def
/UniqueID 4037526 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C977ACEB10D7B7CCAA782B3E10A4BEAFD6991C7A5E7DAF786CA93E9C7130DEBD28BA4C9AFE43A4D076FADC2F9A5060FFDA38C73F5D27D5516C3C835CF8479B24EDAC1EDAB13DB00EB258C07233738DDB9B9A794039981BB6CE707DDFA567987E19A0C666C4A0E508FBEABA8E2B5A5443A992A5B9C457941AE7A70D14F8FFE98BA75B742874A3ED376654A8BD12B89AF7DE52748AC93B9325011E6C7B03ACD8FA3E8965A858AABFC29E6FB767F5D94FBCD20F6C42E402081F23E3A78A8BD430A3BDA074F6E4B29B9DECFA34536B6013561C1AB7004F2A9DBDE46865DCAB38FD437A0C94969F54650AC8BF1BCDB7C3DE940F2BAFD78A8F44EA605DE48F36067C921227E7C7FA57656D7144A4733A775215BFD1E308594B19E64A4808A47EF2F9214D5C3CD3B14FAE9DC3305EEB48CBC40FE4968E059765E88502AD50DA5DE9371B03BD537E1B9606D8256A80A512BEA45994F433C87520652769DE8202C62BC7E06087A56B95F410F15DC7483F773F64E0E71BB186029E699FA7B416ABA86FC21246356E7A26F353F2C7C171190AF71A77487271F6449524ECB07352B5CD7EECCD63A55885783002CE35979B92A72A8F1D576DB4FBD6BABDBC9B8EC2EDB61134D7F82297BCFC318670F8906E21AF13D575778237B117C16C50731F667BE795DAADC8F0923D43FDFD4AE1E3AB376A5DB5A04F231CD922464F947A446474F43DFC1AB329513ECCE35B145642367E909F02BDC1E9A26D7154E484323FD6CF9E9ECA41A0A
D17E8C5B2C57EB1099E4D8A29983D672FC1923AFA3E4159C98B4B51D5470FBC624132678607A97F7EA2A80AA16C61FD7E2A24FDA726DA7AAC5914831196EA288F0A8514FD0EBD3FB061055D6EFC31CAC8A3AD88696AC8C3EF5C6DA182F0A4B2C8ACF21DC2966856402A2D9EA91CE0AC0B8568BD6D056944A724516D8F4299BB82AC3CA480012A5BFD3400164E7CA9EAC2878E1EE0E8122F8A5D1F8DA010FEA90550BB00113FECCD8215778EB4E923FD3DC8BD6B04E62EFB4A870171552A3F8D19A57BC514BA812826EAF130B3125769BD0998E68CC1F274576FDD59B4C53C3276676C2E713C46783E77E27DED3E2ECB1D6773F88125894974EEB33FFDE9BF7A4B783241E1BC6FB4EF00783C5AF94666B97057E8A9C800AC2AF209FA14A541AC9BCF29FA2DD71B4AA2A867F8CC8A6D615F0EA1C4DEDFFAA0CA5FFE21ECFDA0B0717F589DA03882FE0AE9D1CB1B96A56F1230E5B73032C4503C7FD96F9952D0DB0E31836EF00EF180C4BE53EAD06544C3CC68B7331DEB4FE2A63A57477F7B10B0901301F626DE1D09D05855BC58C076242571225F29BC6949EE23E79BBA59261F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Italic cguidfix
/F2.1/HelveticaNeue-Italic renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 582 371 rc
14 357 m
569 357 l
569 13 l
14 13 l
h
14 357 m
f
2 J
/Cs2 SC
0.36862701 0.50588202 0.709804 sc
1 0 0 -1 14 357 cm
11.57 325.5 m
11.73 325.5 l
12.223 325.5 l
12.871 325.332 l
14.176 325.5 l
14.504 325.5 l
14.828 325.32001 l
15.48 325.31601 l
16.785 325.5 l
16.945 325.5 l
17.108999 325.5 l
17.434 325.5 l
18.086 325.293 l
19.391001 325.28101 l
21.996 325.5 l
22.176001 325.5 l
22.351999 325.25 l
22.702999 325.246 l
23.41 325.23801 l
24.823999 325.5 l
25 325.5 l
25.176001 325.215 l
25.531 325.211 l
26.238001 325.203 l
27.652 325.5 l
27.827999 325.5 l
28.004 325.17599 l
28.355 325.172 l
30.476999 325.13699 l
33.305 325.082 l
33.469002 325.5 l
33.632999 325.5 l
33.965 325.07001 l
34.625 325.05499 l
35.941002 325.02701 l
36.109001 325.02301 l
36.602001 325.01199 l
37.262001 324.996 l
38.582001 324.961 l
38.745998 324.957 l
38.914001 324.953 l
39.242001 324.94501 l
41.223 324.88699 l
43.859001 324.80499 l
44.022999 324.797 l
44.183998 324.793 l
45.155998 324.758 l
46.449001 324.711 l
46.609001 324.703 l
46.772999 324.69901 l
47.094002 324.68399 l
47.742001 324.66 l
49.035 324.60501 l
49.195 324.59799 l
49.359001 324.59 l
49.683998 324.57401 l
50.327999 324.547 l
51.620998 324.48401 l
54.210999 324.34799 l
54.387001 324.34 l
54.562 324.328 l
54.91 324.30899 l
55.612999 324.26999 l
57.015999 324.18399 l
57.719002 324.13699 l
58.422001 324.09399 l
59.824001 323.996 l
60 323.98401 l
60.175999 323.96899 l
60.527 323.94501 l
61.227001 323.89099 l
62.629002 323.78101 l
65.438004 323.539 l
65.765999 323.508 l
66.094002 323.48001 l
66.746002 323.418 l
68.058998 323.285 l
70.676003 323 l
70.839996 322.98401 l
71.332001 322.92599 l
71.984001 322.84799 l
73.296997 322.68399 l
75.914001 322.332 l
76.094002 322.30899 l
76.269997 322.28101 l
76.625 322.23001 l
77.335999 322.125 l
78.753998 321.90601 l
81.594002 321.42599 l
81.769997 321.39499 l
81.948997 321.36301 l
82.301003 321.297 l
83.012001 321.164 l
84.43 320.89099 l
87.269997 320.293 l
87.445 320.254 l
87.616997 320.215 l
87.964996 320.13699 l
88.664001 319.97699 l
90.058998 319.64099 l
92.844002 318.918 l
93.019997 318.871 l
93.191002 318.82401 l
93.539001 318.72699 l
94.237999 318.52701 l
95.633003 318.117 l
98.417999 317.23401 l
98.582001 317.17999 l
98.741997 317.125 l
99.066002 317.01599 l
99.719002 316.793 l
101.016 316.332 l
103.617 315.34 l
103.781 315.27701 l
103.941 315.211 l
104.266 315.078 l
104.918 314.81201 l
106.219 314.26199 l
108.816 313.082 l
109.168 312.918 l
109.52 312.746 l
110.227 312.40201 l
111.637 311.69101 l
114.453 310.168 l
114.629 310.07001 l
114.809 309.96899 l
115.16 309.76999 l
115.863 309.35501 l
117.273 308.51199 l
120.094 306.703 l
120.422 306.48401 l
120.75 306.26199 l
121.41 305.80899 l
122.723 304.879 l
125.355 302.91 l
126.012 302.39499 l
126.672 301.871 l
127.988 300.793 l
130.617 298.51599 l
130.78101 298.371 l
130.94099 298.22699 l
131.26601 297.93399 l
131.91 297.34399 l
133.19901 296.129 l
135.77699 293.57401 l
135.94099 293.41 l
136.10201 293.246 l
136.422 292.91 l
137.07001 292.23401 l
138.35899 290.85199 l
140.938 287.953 l
141.289 287.547 l
141.63699 287.13699 l
142.34 286.30499 l
143.73801 284.60199 l
146.535 281.03101 l
152.13699 273.203 l
152.297 272.961 l
152.461 272.71899 l
152.789 272.23001 l
153.44099 271.242 l
154.746 269.23001 l
157.35899 265.05099 l
162.582 256.05099 l
162.758 255.73399 l
162.938 255.414 l
163.289 254.77 l
164 253.46899 l
165.414 250.82001 l
168.246 245.34399 l
173.90601 233.64799 l
185.02299 207.996 l
195.395 181.34 l
206.64101 150.438 l
217.13699 120.996 l
228.508 90.210999 l
228.85899 89.305 l
229.207 88.402 l
229.90601 86.609001 l
231.30099 83.058998 l
234.09399 76.128998 l
239.67599 63.07 l
239.84 62.707001 l
240 62.344002 l
240.328 61.625 l
240.97701 60.195 l
242.28101 57.395 l
244.883 52.015999 l
245.211 51.367001 l
245.535 50.723 l
246.188 49.445 l
247.48801 46.960999 l
250.09399 42.245998 l
250.27 41.938 l
250.44501 41.632999 l
250.80099 41.027 l
251.504 39.84 l
252.918 37.542999 l
253.27 36.987999 l
253.621 36.438 l
254.328 35.359001 l
255.742 33.292999 l
256.09399 32.792999 l
256.44501 32.305 l
257.15201 31.344 l
258.56201 29.516001 l
261.38699 26.23 l
261.55099 26.055 l
261.71899 25.879 l
262.047 25.535 l
262.707 24.871 l
264.02301 23.621 l
264.18799 23.473 l
264.35199 23.327999 l
264.68399 23.042999 l
265.34399 22.488001 l
266.66 21.473 l
266.82401 21.351999 l
266.98801 21.233999 l
267.32001 21.007999 l
267.97699 20.57 l
268.14499 20.465 l
268.30899 20.363001 l
268.63699 20.164 l
269.297 19.785 l
269.461 19.698999 l
269.625 19.608999 l
269.957 19.441 l
270.61301 19.121 l
270.78101 19.047001 l
271.27301 18.836 l
271.93399 18.577999 l
272.09399 18.52 l
272.258 18.461 l
272.578 18.355 l
272.742 18.301001 l
272.90201 18.254 l
273.22699 18.16 l
273.547 18.073999 l
273.871 17.992001 l
274.03101 17.957001 l
274.19501 17.922001 l
274.51599 17.858999 l
274.67999 17.827999 l
274.84 17.801001 l
275.004 17.773001 l
275.32401 17.726999 l
275.48801 17.707001 l
275.64801 17.688 l
275.80899 17.672001 l
275.97299 17.656 l
276.293 17.632999 l
276.457 17.621 l
276.617 17.613001 l
276.77701 17.608999 l
276.94101 17.605 l
277.10199 17.5 l
277.26199 17.5 l
277.42599 17.5 l
277.586 17.5 l
277.75 17.613001 l
277.91 17.617001 l
278.07001 17.629 l
278.23401 17.636999 l
278.39499 17.648001 l
278.55499 17.664 l
278.71899 17.68 l
279.039 17.719 l
279.203 17.738001 l
279.36301 17.761999 l
279.68799 17.812 l
280.008 17.875 l
280.332 17.941 l
280.496 17.976999 l
280.65601 18.011999 l
280.98001 18.094 l
281.14099 18.136999 l
281.30099 18.184 l
281.625 18.277 l
282.26999 18.492001 l
282.621 18.617001 l
282.97299 18.754 l
283.672 19.051001 l
283.84799 19.129 l
284.02301 19.211 l
284.375 19.382999 l
285.07401 19.746 l
285.42599 19.941 l
285.77701 20.145 l
286.47699 20.577999 l
287.879 21.539 l
288.05499 21.667999 l
288.23001 21.801001 l
288.578 22.07 l
289.28101 22.632999 l
290.68399 23.858999 l
290.85901 24.023001 l
291.03101 24.188 l
291.383 24.52 l
292.086 25.215 l
293.48801 26.695 l
293.64801 26.879 l
293.81201 27.059 l
294.14099 27.43 l
294.793 28.191 l
296.10199 29.792999 l
298.71899 33.312 l
299.047 33.780998 l
299.375 34.257999 l
300.02701 35.227001 l
301.336 37.237999 l
303.953 41.555 l
304.129 41.859001 l
304.30899 42.167999 l
304.66 42.785 l
305.371 44.047001 l
306.789 46.645 l
309.625 52.145 l
315.297 64.25 l
315.46899 64.644997 l
315.64499 65.039001 l
315.992 65.828003 l
316.68799 67.426003 l
318.082 70.676003 l
320.86301 77.383003 l
326.43399 91.503998 l
336.82001 119.633 l
348.082 151.215 l
358.59799 180.129 l
368.90601 206.73399 l
380.09399 232.688 l
380.254 233.039 l
380.418 233.39101 l
380.746 234.09 l
381.39801 235.48399 l
382.69901 238.23 l
385.30899 243.56599 l
390.52701 253.617 l
390.703 253.94501 l
390.883 254.27 l
391.23401 254.914 l
391.94101 256.19501 l
393.35501 258.711 l
396.18399 263.55899 l
401.84 272.508 l
402.008 272.754 l
402.172 273 l
402.5 273.48801 l
403.16 274.457 l
404.48001 276.35199 l
407.125 279.98801 l
407.289 280.211 l
407.453 280.42999 l
407.785 280.867 l
408.44501 281.73001 l
409.76599 283.42599 l
412.40601 286.66 l
412.56601 286.85199 l
412.73001 287.043 l
413.05099 287.42599 l
413.69901 288.17599 l
414.996 289.64801 l
417.582 292.453 l
417.746 292.621 l
417.90601 292.793 l
418.23001 293.129 l
418.879 293.793 l
420.172 295.086 l
422.76199 297.55099 l
423.465 298.19101 l
424.168 298.82001 l
425.57001 300.043 l
428.379 302.35199 l
428.55499 302.492 l
429.082 302.90201 l
429.785 303.44101 l
431.18799 304.492 l
433.996 306.465 l
434.65201 306.90201 l
435.30899 307.332 l
436.617 308.168 l
439.23801 309.742 l
439.56601 309.92999 l
440.55099 310.48001 l
441.85901 311.19101 l
444.48001 312.53101 l
444.66 312.617 l
444.836 312.703 l
445.19101 312.875 l
445.90201 313.211 l
447.32001 313.85901 l
450.164 315.07401 l
450.51599 315.215 l
450.871 315.35901 l
451.582 315.63699 l
453.004 316.17599 l
455.84399 317.17599 l
456.01599 317.23001 l
456.19101 317.289 l
456.539 317.40601 l
457.23801 317.629 l
458.633 318.06201 l
461.422 318.871 l
461.59399 318.918 l
461.76999 318.965 l
462.117 319.05899 l
462.81601 319.242 l
464.211 319.59799 l
467 320.254 l
467.16 320.289 l
467.32401 320.328 l
467.64801 320.39801 l
468.30099 320.539 l
469.59799 320.80899 l
472.19901 321.30899 l
472.36301 321.34 l
472.52701 321.367 l
472.85199 321.42599 l
473.5 321.539 l
474.80099 321.76199 l
477.40201 322.168 l
477.582 322.19501 l
477.758 322.21899 l
478.10901 322.27301 l
478.81201 322.371 l
480.22699 322.56601 l
483.047 322.918 l
483.22299 322.93799 l
483.39801 322.961 l
483.75 323 l
484.457 323.078 l
485.867 323.23001 l
488.68799 323.51199 l
488.85199 323.52301 l
489.34399 323.57001 l
490.004 323.629 l
491.32001 323.742 l
493.953 323.94501 l
494.28101 323.96899 l
494.61301 323.996 l
495.26999 324.039 l
496.586 324.129 l
499.21899 324.293 l
499.383 324.30099 l
499.543 324.31201 l
499.867 324.328 l
501.80099 324.43399 l
501.965 324.44101 l
502.125 324.44901 l
502.44901 324.465 l
504.383 324.55899 l
504.547 324.56601 l
504.707 324.57401 l
505.03101 324.586 l
505.67599 324.617 l
506.965 324.668 l
509.547 324.76999 l
509.72299 324.77301 l
509.89801 324.78101 l
510.246 324.793 l
510.94901 324.81601 l
512.34802 324.86301 l
512.69897 324.871 l
513.047 324.883 l
513.75 324.90201 l
515.14801 324.94101 l
515.32397 324.94901 l
515.5 324.953 l
515.84802 324.961 l
516.55103 324.98001 l
517.94897 325.01599 l
520.75 325.07401 l
521.40601 325.09 l
523.36298 325.125 l
523.69098 325.133 l
524.02002 325.13699 l
524.672 325.14801 l
525.97998 325.168 l
526.14099 325.172 l
526.30499 325.17599 l
526.633 325.17999 l
527.28497 325.18799 l
528.59399 325.207 l
531.20697 325.5 l
531.38702 325.5 l
531.57001 325.246 l
531.93402 325.25 l
534.125 325.5 l
534.30499 325.5 l
534.48798 325.27701 l
534.85199 325.28101 l
535.58197 325.285 l
537.04303 325.5 l
537.40601 325.5 l
537.77002 325.30499 l
538.5 325.31201 l
539.95697 325.5 l
540.32397 325.5 l
540.68799 325.328 l
541.41803 325.332 l
541.60199 325.5 l
542.14801 325.5 l
542.328 325.5 l
542.69501 325.34 l
542.875 325.5 l
S
0 J
0.40000001 0.40000001 0.40000001 sc
0.5 325.5 m
553.94501 325.5 l
S
277.5 342.547 m
277.5 0.5 l
S
0 0 0 sc
184.5 328 m
184.5 208 l
S
368.5 208 m
368.5 328 l
S
1 0.50196099 0.50196099 sc
CM
82.398003 32.370998 m
90.644997 33.254002 104.715 36.035 110.898 38.004002 c
136.453 46.145 155.211 62.640999 173.379 92.957001 c
179.65601 103.43 188.28101 120.559 193.40601 132.72701 c
195.145 136.85201 196.69901 140.367 196.85899 140.539 c
197.02 140.711 197.14799 116.324 197.14799 86.351997 c
197.14799 31.851999 l
138.461 31.969 l
106.184 32.035 80.957001 32.215 82.398003 32.370998 c
h
82.398003 32.370998 m
f
382.39801 89.726997 m
382.39801 121.555 382.53101 147.461 382.68799 147.289 c
382.84799 147.117 385.41 141.23801 388.383 134.22701 c
401.80899 102.562 416.81201 77.851997 431.89801 62.542999 c
449.09799 45.094002 466.67599 36.925999 495.48001 33 c
501.94901 32.117001 495.957 31.996 442.586 31.926001 c
382.39801 31.851999 l
h
382.39801 89.726997 m
f
2 w
1 J
1 j
/Cs1 SC
0 0 0 sc
1 0 0 -1 14 357 cm
119.25 258.75 m
130.4778 270.57977 l
137.34808 277.84488 l
S
CM
155.47061 74.795692 m
151.49022 84.244316 l
151.34808 79.155136 l
151.34808 79.155136 l
146.2589 79.297279 l
h
155.47061 74.795692 m
f
0 J
0 j
1 0 0 -1 14 357 cm
141.47061 282.20432 m
137.49022 272.75568 l
137.34808 277.84488 l
137.34808 277.84488 l
132.2589 277.70273 l
h
141.47061 282.20432 m
S
1 J
1 j
438.18988 259.875 m
420.06009 279.76498 l
S
CM
430.01819 72.800713 m
439.14581 77.470474 l
434.06009 77.235023 l
434.06009 77.235023 l
433.82465 82.320747 l
h
430.01819 72.800713 m
f
0 J
0 j
1 0 0 -1 14 357 cm
416.01819 284.19928 m
425.14581 279.52954 l
420.06009 279.76498 l
420.06009 279.76498 l
419.82465 274.67926 l
h
416.01819 284.19928 m
S
0 i
/Cs2 SC
1 1 1 sc
CM
114 124.125 m
136 124.125 l
136 103.125 l
114 103.125 l
h
f
0.2 0.2 0.2 sc
1 0 0 -1 125 113.125 cm
/F1.1[ 16 0 0 -16 0 0]sf
-11.5 6.5 m
(!"#)[ 9.125000 4.445312 0.000000 ] xS
1 1 1 sc
CM
457.68988 118.5 m
479.68988 118.5 l
479.68988 97.5 l
457.68988 97.5 l
h
f
0.2 0.2 0.2 sc
1 0 0 -1 468.68988 107.5 cm
-11.5 6.5 m
(!"#)[ 9.125000 4.445312 0.000000 ] xS
1 1 1 sc
CM
293.5 163.625 m
302.5 163.625 l
302.5 145.625 l
293.5 145.625 l
h
f
/Cs3 SC
0 sc
1 0 0 -1 290.5 154.625 cm
-11.675781 5 m
($%)[ 8.898438 0.000000 ] xS
/Cs2 SC
0.2 0.2 0.2 sc
2.5507812 5 m
(!)s
/Cs3 SC
0 sc
1 0 0 -1 188.625 22.875 cm
/F2.1[ 12 0 0 -12 0 0]sf
-10.902 2.5 m
(!")[ 4.668000 0.000000 ] xS
/Cs1 SC
0.14901961 0.14901961 0.14901961 sc
/F2.1[ 8 0 0 -8 0 0]sf
-0.90600002 6.5 m
(#$%)[ 4.696000 2.664000 0.000000 ] xS
/Cs3 SC
0 sc
1 0 0 -1 397 22.875 cm
/F2.1[ 12 0 0 -12 0 0]sf
-8.5679998 2.5 m
(")s
/Cs1 SC
0.14901961 0.14901961 0.14901961 sc
/F2.1[ 8 0 0 -8 0 0]sf
-3.24 6.5 m
(#$%)[ 4.696000 2.664000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
